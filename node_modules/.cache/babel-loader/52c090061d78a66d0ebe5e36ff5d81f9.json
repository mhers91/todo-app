{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\mikeh\\\\Documents\\\\ReactApplication\\\\ToDo\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\mikeh\\\\Documents\\\\ReactApplication\\\\ToDo\\\\todo\\\\src\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { TodoBanner } from \"./TodoBanner\";\nimport { TodoCreator } from \"./TodoCreator\";\nimport { TodoRow } from \"./TodoRow\";\nimport { VisibilityControl } from \"./VisibilityControl\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateNewTextValue = event => {\n      this.setState({\n        newItemText: event.target.value\n      });\n    };\n\n    this.createNewTodo = task => {\n      if (!this.state.todoItems.find(item => item.action === task)) {\n        this.setState({\n          todoItems: [...this.state.todoItems, {\n            action: task,\n            done: false\n          }]\n        }, () => localStorage.setItem(\"todos\", JSON.stringify(this.state)));\n      }\n    };\n\n    this.toggleTodo = todo => this.setState({\n      todoItems: this.state.todoItems.map(item => item.action === todo.action ? _objectSpread({}, item, {\n        done: !item.done\n      }) : item)\n    });\n\n    this.todoTableRows = doneValue => this.state.todoItems.filter(item => item.done === doneValue).map(item => React.createElement(TodoRow, {\n      key: item.action,\n      item: item,\n      callback: this.toggleTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n\n    this.componentDidMount = () => {\n      let data = localStorage.getItem(\"todos\");\n      this.setState(data != null ? JSON.parse(data) : {\n        userName: \"Mike\",\n        todoItems: [{\n          action: \"Buy Flowers\",\n          done: false\n        }, {\n          action: \"Get Shoes\",\n          done: false\n        }, {\n          action: \"Collect Tickets\",\n          done: true\n        }, {\n          action: \"Call Joe\",\n          done: false\n        }],\n        showCompleted: true\n      });\n    };\n\n    this.changeStateData = () => {\n      this.setState({\n        userName: this.state.userName === \"Mike\" ? \"Bob\" : \"Mike\"\n      });\n    };\n\n    this.render = () => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(TodoBanner, {\n      name: this.state.userName,\n      tasks: this.state.todoItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(TodoCreator, {\n      callback: this.createNewTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      className: \"table table-striped table-bordered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Done\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.todoTableRows(false))), React.createElement(\"div\", {\n      className: \"bg-secondary text-white text-center p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(VisibilityControl, {\n      description: \"Completed Tasks\",\n      isChecked: this.state.showCompleted,\n      callback: checked => this.setState({\n        showCompleted: checked\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), this.state.showCompleted && React.createElement(\"table\", {\n      className: \"table table-striped table-bordered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Done\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.todoTableRows(true)))));\n\n    this.state = {\n      userName: \"Mike\",\n      todoItems: [{\n        action: \"Buy Flowers\",\n        done: false\n      }, {\n        action: \"Get Shoes\",\n        done: false\n      }, {\n        action: \"Collect Tickets\",\n        done: true\n      }, {\n        action: \"Call Joe\",\n        done: false\n      }],\n      showCompleted: true\n    };\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\mikeh\\Documents\\ReactApplication\\ToDo\\todo\\src\\App.js"],"names":["React","Component","TodoBanner","TodoCreator","TodoRow","VisibilityControl","App","constructor","props","updateNewTextValue","event","setState","newItemText","target","value","createNewTodo","task","state","todoItems","find","item","action","done","localStorage","setItem","JSON","stringify","toggleTodo","todo","map","todoTableRows","doneValue","filter","componentDidMount","data","getItem","parse","userName","showCompleted","changeStateData","render","checked"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { TodoBanner } from \"./TodoBanner\";\nimport { TodoCreator } from \"./TodoCreator\";\nimport { TodoRow } from \"./TodoRow\";\nimport { VisibilityControl } from \"./VisibilityControl\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"Mike\",\n      todoItems: [\n        { action: \"Buy Flowers\", done: false },\n        { action: \"Get Shoes\", done: false },\n        { action: \"Collect Tickets\", done: true },\n        { action: \"Call Joe\", done: false }\n      ],\n      showCompleted: true\n    };\n  }\n\n  updateNewTextValue = event => {\n    this.setState({ newItemText: event.target.value });\n  };\n\n  createNewTodo = task => {\n    if (!this.state.todoItems.find(item => item.action === task)) {\n      this.setState(\n        {\n          todoItems: [...this.state.todoItems, { action: task, done: false }]\n        },\n        () => localStorage.setItem(\"todos\", JSON.stringify(this.state))\n      );\n    }\n  };\n\n  toggleTodo = todo =>\n    this.setState({\n      todoItems: this.state.todoItems.map(item =>\n        item.action === todo.action ? { ...item, done: !item.done } : item\n      )\n    });\n\n  todoTableRows = doneValue =>\n    this.state.todoItems\n      .filter(item => item.done === doneValue)\n      .map(item => (\n        <TodoRow key={item.action} item={item} callback={this.toggleTodo} />\n      ));\n\n  componentDidMount = () => {\n    let data = localStorage.getItem(\"todos\");\n    this.setState(\n      data != null\n        ? JSON.parse(data)\n        : {\n            userName: \"Mike\",\n            todoItems: [\n              { action: \"Buy Flowers\", done: false },\n              { action: \"Get Shoes\", done: false },\n              { action: \"Collect Tickets\", done: true },\n              { action: \"Call Joe\", done: false }\n            ],\n            showCompleted: true\n          }\n    );\n  };\n\n  changeStateData = () => {\n    this.setState({\n      userName: this.state.userName === \"Mike\" ? \"Bob\" : \"Mike\"\n    });\n  };\n\n  render = () => (\n    <div>\n      <TodoBanner name={this.state.userName} tasks={this.state.todoItems} />\n      <div className='container-fluid'>\n        <TodoCreator callback={this.createNewTodo} />\n        <table className='table table-striped table-bordered'>\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th>Done</th>\n            </tr>\n          </thead>\n          <tbody>{this.todoTableRows(false)}</tbody>\n        </table>\n        <div className='bg-secondary text-white text-center p-2'>\n          <VisibilityControl\n            description='Completed Tasks'\n            isChecked={this.state.showCompleted}\n            callback={checked => this.setState({ showCompleted: checked })}\n          />\n        </div>\n\n        {this.state.showCompleted && (\n          <table className='table table-striped table-bordered'>\n            <thead>\n              <tr>\n                <th>Description</th>\n                <th>Done</th>\n              </tr>\n            </thead>\n            <tbody>{this.todoTableRows(true)}</tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}