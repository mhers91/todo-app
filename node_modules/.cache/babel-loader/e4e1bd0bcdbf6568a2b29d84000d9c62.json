{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\mikeh\\\\Documents\\\\ReactApplication\\\\ToDo\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\mikeh\\\\Documents\\\\ReactApplication\\\\ToDo\\\\todo\\\\src\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { TodoBanner } from \"./TodoBanner\";\nimport { TodoCreator } from \"./TodoCreator\";\nimport { TodoRow } from \"./TodoRow\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateNewTextValue = event => {\n      this.setState({\n        newItemText: event.target.value\n      });\n    };\n\n    this.createNewTodo = task => {\n      if (!this.state.todoItems.find(item => item.action === task)) {\n        this.setState({\n          todoItems: [...this.state.todoItems, {\n            action: task,\n            done: false\n          }]\n        });\n      }\n    };\n\n    this.toggleTodo = todo => this.setState({\n      todoItems: this.state.todoItems.map(item => item.action === todo.action ? _objectSpread({}, item, {\n        done: !item.done\n      }) : item)\n    });\n\n    this.todoTableRows = () => this.state.todoItems.map(item => React.createElement(\"tr\", {\n      key: item.action,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, item.action), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: item.done,\n      onChange: () => this.toggleTodo(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }))));\n\n    this.changeStateData = () => {\n      this.setState({\n        userName: this.state.userName === \"Mike\" ? \"Bob\" : \"Mike\"\n      });\n    };\n\n    this.render = () => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"bg-primary text-white text-center p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.userName, \"'s To Do List (\", this.state.todoItems.filter(t => !t.done).length, \" items to do)\"), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"my-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      value: this.state.newItemText,\n      onChange: this.updateNewTextValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-primary mt-1\",\n      onClick: this.createNewTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Add\")), React.createElement(\"table\", {\n      className: \"table table-striped table-bordered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Done\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.todoTableRows()))));\n\n    this.state = {\n      userName: \"Mike\",\n      todoItems: [{\n        action: \"Buy Flowers\",\n        done: false\n      }, {\n        action: \"Get Shoes\",\n        done: false\n      }, {\n        action: \"Collect Tickets\",\n        done: true\n      }, {\n        action: \"Call Joe\",\n        done: false\n      }] //newItemText: \"\"\n\n    };\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\mikeh\\Documents\\ReactApplication\\ToDo\\todo\\src\\App.js"],"names":["React","Component","TodoBanner","TodoCreator","TodoRow","App","constructor","props","updateNewTextValue","event","setState","newItemText","target","value","createNewTodo","task","state","todoItems","find","item","action","done","toggleTodo","todo","map","todoTableRows","changeStateData","userName","render","filter","t","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { TodoBanner } from \"./TodoBanner\";\nimport { TodoCreator } from \"./TodoCreator\";\nimport { TodoRow } from \"./TodoRow\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"Mike\",\n      todoItems: [\n        { action: \"Buy Flowers\", done: false },\n        { action: \"Get Shoes\", done: false },\n        { action: \"Collect Tickets\", done: true },\n        { action: \"Call Joe\", done: false }\n      ]\n      //newItemText: \"\"\n    };\n  }\n\n  updateNewTextValue = event => {\n    this.setState({ newItemText: event.target.value });\n  };\n\n  createNewTodo = task => {\n    if (!this.state.todoItems.find(item => item.action === task)) {\n      this.setState({\n        todoItems: [...this.state.todoItems, { action: task, done: false }]\n      });\n    }\n  };\n\n  toggleTodo = todo =>\n    this.setState({\n      todoItems: this.state.todoItems.map(item =>\n        item.action === todo.action ? { ...item, done: !item.done } : item\n      )\n    });\n\n  todoTableRows = () =>\n    this.state.todoItems.map(item => (\n      <tr key={item.action}>\n        <td>{item.action}</td>\n        <td>\n          <input\n            type='checkbox'\n            checked={item.done}\n            onChange={() => this.toggleTodo(item)}\n          />\n        </td>\n      </tr>\n    ));\n\n  changeStateData = () => {\n    this.setState({\n      userName: this.state.userName === \"Mike\" ? \"Bob\" : \"Mike\"\n    });\n  };\n\n  render = () => (\n    <div>\n      <h4 className='bg-primary text-white text-center p-2'>\n        {this.state.userName}'s To Do List (\n        {this.state.todoItems.filter(t => !t.done).length} items to do)\n      </h4>\n      <div className='container-fluid'>\n        <div className='my-1'>\n          <input\n            className='form-control'\n            value={this.state.newItemText}\n            onChange={this.updateNewTextValue}\n          />\n          <button className='btn btn-primary mt-1' onClick={this.createNewTodo}>\n            Add\n          </button>\n        </div>\n        <table className='table table-striped table-bordered'>\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th>Done</th>\n            </tr>\n          </thead>\n          <tbody>{this.todoTableRows()}</tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}